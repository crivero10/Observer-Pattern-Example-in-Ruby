= Observer Pattern

This documentation was developed as part of a programming
activity for the <em>Software Design and Architecture</em>
course (_Tc3049_), at the Tecnológico de Monterrey, Campus
Estado de México.

== Author

* *A01371368* <em>Carlos Rivero</em>

== Overview

The <b>observer pattern</b> is a behavioral software design pattern that defines a dependency
of type one to many between objects, so that when one of the objects changes its
state, it notifies this change to all the dependents.

The UML diagram for this programming activity is as follows:

rdoc-image:img/observer_uml.png

To test the program, inside the +src+ folder type the following
instruction at the command line:

    ruby -I -w twitter_test.rb

== References

- \M. Fowler. <em>UML Distilled: A Brief Guide to the Standard
Object Modeling Language, 3rd Edition.</em>
Addison-Wesley, 2003.

- \E. Gamma, R. Helm, R. Johnson, J. M. Vlissides. <em>Design
Patterns: Elements of Reusable Object-Oriented Software.</em>
Addison-Wesley, 1994.

- \R. Olsen. <em>Design Patterns in Ruby.</em> Addison-Wesley,
2007.
